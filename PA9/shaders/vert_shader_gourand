#version 330

layout (location = 0) in vec3 v_position; 
layout (location = 1) in vec2 v_texture; 
layout (location = 2) in vec3 v_Normal;

smooth out vec2 texture; 
smooth out vec4 color;

uniform mat4 projectionMatrix; 
uniform mat4 viewMatrix; 
uniform mat4 modelMatrix; 
uniform vec4 AmbientProduct, DiffuseProduct, SpecularProduct;
uniform vec4 LightPosition;
uniform float Shininess;

void main(void) 
{ 
  vec4 v = vec4(v_position, 1.0); 
  gl_Position = (projectionMatrix * viewMatrix * modelMatrix) * v; 
  vec3 pos = (modelMatrix * v).xyz;
  vec3 vPos = (viewMatrix*modelMatrix * v).xyz;

	
  vec3 L = normalize( LightPosition.xyz - pos);
  vec3 E = normalize( -vPos );
  vec3 H = normalize( L + E );


  vec3 N = normalize( modelMatrix * vec4(v_Normal, 0.0) ).xyz;

  vec4 ambient = AmbientProduct;

  float Kd = max( dot(L, N), 0.0 );
  vec4  diffuse = Kd*DiffuseProduct;

  L = normalize( LightPosition.xyz);

  N = normalize(viewMatrix*modelMatrix * vec4(v_Normal, 0.0) ).xyz;  
  float Ks = pow( max(dot(N, H), 0.0), Shininess );
  vec4  specular = Ks * SpecularProduct;
  if( dot(L, N) < 0.0 )  specular = vec4(0.0, 0.0, 0.0, 1.0); 

  color =  ambient + diffuse + specular;
  color.a = 1;
 


  texture = v_texture; 
} 
          
