#version 330

layout (location = 0) in vec3 v_position; 
layout (location = 1) in vec2 v_texture; 
layout (location = 2) in vec3 v_Normal;

smooth out vec2 texture; 
smooth out vec3 fN;
smooth out vec3 fE;
smooth out vec3 fL;

smooth out vec3 fN2;
smooth out vec3 fL2;

out mat4 ModelView;

uniform mat4 projectionMatrix; 
uniform mat4 viewMatrix; 
uniform mat4 modelMatrix; 
uniform vec4 AmbientProduct, DiffuseProduct, SpecularProduct;
uniform vec4 LightPosition;
uniform float Shininess;

void main(void) 
{ 
  vec4 v = vec4(v_position, 1.0); 
  gl_Position = (projectionMatrix * viewMatrix * modelMatrix) * v; 
  vec3 pos = (modelMatrix * v).xyz;
  vec3 vPos = (viewMatrix*modelMatrix * v).xyz;
  fN = (modelMatrix * vec4(v_Normal,0.0)).xyz;
  fE = -vPos;
  fL = LightPosition.xyz - pos;

  fN2 = (viewMatrix*modelMatrix * vec4(v_Normal,0.0)).xyz;
  fL2 = LightPosition.xyz;

  texture = v_texture; 
} 
          
